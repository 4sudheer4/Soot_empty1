public class Test extends java.lang.Object
{

    public void <init>()
    {
        Test r0;

        r0 := @this: Test;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <Test: int test(int,int,int)>(1, 2, 3);

        return;
    }

    private static int test(int, int, int)
    {
        int i0, i1, i2, i3, i4, i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = i1 + 1;

        i4 = i2 + i3;

        i5 = i3 * i4;

        staticinvoke <Test: void print(int,int)>(i5, i3);

        return i5;
    }

    private static void print(int, int)
    {
        int i0, i1;
        java.io.PrintStream $r0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(int)>(i0);

        return;
    }
}
